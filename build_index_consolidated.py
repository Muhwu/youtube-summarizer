#!/usr/bin/env python3
# Generate readme.md with consolidated-tag index for markdown files under ./chapters
from pathlib import Path
import re
from collections import defaultdict

TAG_MAP = {
    'aaa_development': 'aaa', 'ability_design': 'ability', 'accessibility': 'accessibility',
    'accessibility_design': 'accessibility', 'accountability': 'accountability', 'acting': 'acting',
    'action_rpg': 'action', 'adaptation': 'adaptation', 'ai': 'ai', 'ai_design': 'ai',
    'ai_in_gamedev': 'ai', 'ai_in_games': 'ai', 'ai_programming': 'ai', 'ai_voice': 'ai',
    'api_design': 'api', 'architecture': 'architecture', 'archiving': 'archiving', 'art': 'art',
    'art_design': 'art', 'art_development': 'art', 'art_direction': 'art', 'art_generation': 'art',
    'art_pipeline': 'art', 'art_production': 'art', 'art_style': 'art', 'asset_organization': 'asset',
    'attribute_design': 'attribute', 'attributes': 'attributes', 'audio_design': 'audio',
    'augmented_reality': 'augmented', 'balancing': 'balancing', 'behind_the_scenes': 'behind',
    'bloopers': 'bloopers', 'board_games': 'board', 'brainstorming': 'brainstorming',
    'brand_extension': 'brand', 'budgeting': 'budgeting', 'bug_fixing': 'bug', 'burnout': 'burnout',
    'business': 'business', 'business_development': 'business', 'business_ethics': 'business',
    'business_of_games': 'business', 'business_operations': 'business', 'career': 'career',
    'career_advice': 'career', 'career_decisions': 'career', 'career_development': 'career',
    'career_path': 'career', 'career_paths': 'career', 'career_reflections': 'career',
    'case_study': 'case', 'character_attributes': 'character', 'character_class_design': 'character',
    'character_creation': 'character', 'character_design': 'character',
    'character_progression': 'character', 'character_systems': 'character',
    'choice_and_consequence': 'choice', 'class_design': 'class', 'classic_games': 'classic',
    'classic_rpgs': 'classic', 'code_management': 'code', 'code_quality': 'code',
    'codestructure': 'codestructure', 'collaboration': 'collaboration', 'collectibles': 'collectibles',
    'combat_design': 'combat', 'combat_systems': 'combat', 'communication': 'communication',
    'communication_skills': 'communication', 'community': 'community',
    'community_building': 'community', 'community_engagement': 'community',
    'community_interaction': 'community', 'community_management': 'community',
    'company_assets': 'company', 'company_culture': 'company', 'concept_development': 'concept',
    'console_development': 'console', 'consumer_behavior': 'consumer',
    'content_creation': 'content', 'content_design': 'content', 'content_organization': 'content',
    'contracts': 'contracts', 'core_mechanics': 'core', 'cplusplus': 'cplusplus',
    'crafting_systems': 'crafting', 'creative_direction': 'creative', 'creative_process': 'creative',
    'creative_tools': 'creative', 'creative_vision': 'creative', 'creativity': 'creativity',
    'creator_experience': 'creator', 'creator_perspective': 'creator', 'creature_design': 'creature',
    'credits': 'credits', 'critical_thinking': 'critical', 'crowdfunding': 'crowdfunding',
    'crpg_design': 'crpg', 'crunch_culture': 'crunch', 'crunch_time': 'crunch', 'csharp': 'csharp',
    'cultural_adaptation': 'cultural', 'cultural_relevance': 'cultural', 'cut_content': 'cut',
    'data_analysis': 'data', 'data_driven_design': 'data', 'debugging': 'debugging',
    'decision_making': 'decision', 'design': 'design', 'design_philosophy': 'design',
    'design_process': 'design', 'developer_anecdotes': 'developer', 'developer_background': 'developer',
    'developer_communication': 'developer', 'developer_culture': 'developer',
    'developer_economics': 'developer', 'developer_insight': 'developer',
    'developer_insights': 'developer', 'developer_journey': 'developer', 'developer_life': 'developer',
    'developer_milestone': 'developer', 'developer_mindset': 'developer', 'developer_persona': 'developer',
    'developer_perspective': 'developer', 'developer_relations': 'developer',
    'developer_resources': 'developer', 'developer_stories': 'developer',
    'developer_wellbeing': 'developer', 'development_culture': 'development',
    'development_insights': 'development', 'development_mindset': 'development',
    'development_philosophy': 'development', 'development_pipeline': 'development',
    'development_process': 'development', 'development_tools': 'development',
    'dialogue_systems': 'dialogue', 'difficulty_design': 'difficulty',
    'digital_distribution': 'digital', 'discoverability': 'discoverability', 'diversity': 'diversity',
    'diversity_and_inclusion': 'diversity', 'documentation': 'documentation', 'drm': 'drm',
    'easter_eggs': 'easter', 'education': 'education', 'emergent_gameplay': 'emergent',
    'encounter_design': 'encounter', 'enemy_design': 'enemy', 'engine_development': 'engine',
    'error_handling': 'error', 'ethics': 'ethics', 'ethics_in_games': 'ethics',
    'event_handling': 'event', 'event_management': 'event', 'event_planning': 'event', 'events': 'events',
    'experience_points': 'experience', 'experimentation': 'experimentation', 'fallout': 'fallout',
    'fan_projects': 'fan', 'fantasy_games': 'fantasy', 'feature_design': 'feature',
    'feature_development': 'feature', 'feature_scoping': 'feature', 'feedback': 'feedback',
    'feedback_management': 'feedback', 'file_management': 'file', 'finance': 'finance',
    'focus_strategies': 'focus', 'freelancing': 'freelancing', 'future_of_work': 'future',
    'future_proofing': 'future', 'future_tech': 'future', 'game_analysis': 'game',
    'game_analytics': 'game', 'game_architecture': 'game', 'game_art': 'game', 'game_audio': 'game',
    'game_awards': 'game', 'game_balance': 'game', 'game_balancing': 'game', 'game_business': 'game',
    'game_components': 'game', 'game_conferences': 'game', 'game_criticism': 'game',
    'game_culture': 'game', 'game_data': 'game', 'game_demos': 'game', 'game_design': 'game',
    'game_design_philosophy': 'game', 'game_design_principles': 'game',
    'game_design_process': 'game', 'game_developer': 'game', 'game_development': 'game',
    'game_development_career': 'game', 'game_development_careers': 'game',
    'game_development_challenges': 'game', 'game_development_culture': 'game',
    'game_development_history': 'game', 'game_development_insights': 'game',
    'game_development_lessons': 'game', 'game_development_philosophy': 'game',
    'game_development_process': 'game', 'game_development_reflection': 'game',
    'game_development_roles': 'game', 'game_direction': 'game', 'game_discoverability': 'game',
    'game_economics': 'game', 'game_economy': 'game', 'game_engine': 'game',
    'game_engine_architecture': 'game', 'game_engines': 'game', 'game_events': 'game',
    'game_hardware': 'game', 'game_history': 'game', 'game_industry': 'game',
    'game_industry_insights': 'game', 'game_jam': 'game', 'game_jams': 'game', 'game_longevity': 'game',
    'game_lore': 'game', 'game_manuals': 'game', 'game_marketing': 'game', 'game_mastering': 'game',
    'game_mechanics': 'game', 'game_memorabilia': 'game', 'game_metrics': 'game',
    'game_narrative': 'game', 'game_philosophy': 'game', 'game_pitching': 'game',
    'game_presentation': 'game', 'game_preservation': 'game', 'game_production': 'game',
    'game_programming': 'game', 'game_progression': 'game', 'game_proposal': 'game',
    'game_props': 'game', 'game_prototyping': 'game', 'game_publishing': 'game',
    'game_reactivity': 'game', 'game_reception': 'game', 'game_rules': 'game', 'game_scripting': 'game',
    'game_sequels': 'game', 'game_soundtrack': 'game', 'game_systems': 'game',
    'game_systems_design': 'game', 'game_testing': 'game', 'game_writing': 'game', 'gamedata': 'gamedata',
    'gamedata_analysis': 'gamedata', 'gamedesign': 'gamedesign', 'gamedev': 'gamedev',
    'gamedev_best_practices': 'gamedev', 'gamedev_business': 'gamedev', 'gamedev_career': 'gamedev',
    'gamedev_communication': 'gamedev', 'gamedev_culture': 'gamedev', 'gamedev_event': 'gamedev',
    'gamedev_history': 'gamedev', 'gamedev_insights': 'gamedev', 'gamedev_legal': 'gamedev',
    'gamedev_lessons': 'gamedev', 'gamedev_management': 'gamedev', 'gamedev_process': 'gamedev',
    'gamedev_roles': 'gamedev', 'gamedev_systems': 'gamedev', 'gamedevelopment': 'gamedevelopment',
    'gamedirection': 'gamedirection', 'gameplay_mechanics': 'gameplay',
    'genre_bending': 'genre', 'genre_blending': 'genre', 'genre_considerations': 'genre',
    'genre_exploration': 'genre', 'graphics_programming': 'graphics',
    'hardware_compatibility': 'hardware', 'hiring': 'hiring', 'hiring_tips': 'hiring',
    'historical_development': 'historical', 'historical_gamedev': 'historical',
    'homebrew_rules': 'homebrew', 'horror_design': 'horror', 'human_resources': 'human',
    'humor': 'humor', 'ideation': 'ideation', 'imposter_syndrome': 'imposter',
    'inclusive_culture': 'inclusive', 'indie_development': 'indie', 'indie_games': 'indie',
    'industry_challenges': 'industry', 'industry_commentary': 'industry',
    'industry_culture': 'industry', 'industry_insights': 'industry', 'industry_trends': 'industry',
    'industry_veteran': 'industry', 'influences': 'influences', 'innovation': 'innovation',
    'inspiration': 'inspiration', 'intellectual_property': 'intellectual',
    'interactive_storytelling': 'interactive', 'interdisciplinary_learning': 'interdisciplinary',
    'interview_tips': 'interview', 'interviews': 'interviews', 'inventory_management': 'inventory',
    'ip_adaptation': 'ip', 'ip_creation': 'ip', 'ip_development': 'ip', 'ip_extension': 'ip',
    'ip_management': 'ip', 'ip_ownership': 'ip', 'item_design': 'item', 'itemization': 'itemization',
    'iteration': 'iteration', 'iterative_design': 'iterative', 'job_application': 'job',
    'job_interview': 'job', 'job_interviews': 'job', 'job_roles': 'job',
    'knowledge_management': 'knowledge', 'leadership': 'leadership',
    'leadership_challenges': 'leadership', 'learning': 'learning', 'learning_resources': 'learning',
    'legacy': 'legacy', 'legacy_code': 'legacy', 'legal': 'legal', 'legal_aspects': 'legal',
    'legal_contracts': 'legal', 'level_design': 'level', 'leveldesign': 'leveldesign',
    'localization': 'localization', 'lore': 'lore', 'lore_design': 'lore', 'lore_development': 'lore',
    'magic_systems': 'magic', 'management': 'management', 'market_analysis': 'market',
    'market_research': 'market', 'marketing': 'marketing', 'mathematics': 'mathematics',
    'mechanics': 'mechanics', 'mechanics_design': 'mechanics', 'media_adaptation': 'media',
    'memorabilia': 'memorabilia', 'memory_management': 'memory', 'mental_health': 'mental',
    'merchandising': 'merchandising', 'metrics': 'metrics', 'milestone': 'milestone',
    'milestones': 'milestone', 'miniatures': 'miniatures', 'mmo_design': 'mmo', 'mmorpg': 'mmorpg',
    'mmorpg_design': 'mmorpg', 'modding': 'modding', 'monetization': 'monetization',
    'motivation': 'motivation', 'multiplayer': 'multiplayer', 'multiplayer_design': 'multiplayer',
    'music_curation': 'music', 'music_production': 'music', 'mystery_design': 'mystery',
    'narrative': 'narrative', 'narrative_design': 'narrative', 'networking': 'networking',
    'niche_markets': 'niche', 'npc_behavior': 'npc', 'npc_design': 'npc', 'onboarding': 'onboarding',
    'online_communities': 'online', 'online_games': 'online', 'open_world': 'open',
    'operating_systems': 'operating', 'operations': 'operations', 'optimization': 'optimization',
    'os_abstraction': 'os', 'passion': 'passion', 'patching': 'patching', 'performance': 'performance',
    'performance_optimization': 'performance', 'performance_testing': 'performance',
    'personal_development': 'personal', 'personal_experience': 'personal',
    'personal_growth': 'personal', 'personal_projects': 'personal', 'personal_reflection': 'personal',
    'personal_wellbeing': 'personal', 'personality': 'personality', 'philosophy': 'philosophy',
    'philosophy_of_games': 'philosophy', 'physical_prototyping': 'physical',
    'pitch_document': 'pitch', 'pitching': 'pitch', 'platform_choice': 'platform',
    'player_agency': 'player', 'player_behavior': 'player', 'player_choice': 'player',
    'player_engagement': 'player', 'player_experience': 'player', 'player_feedback': 'player',
    'player_motivation': 'player', 'player_progression': 'player', 'player_psychology': 'player',
    'playtesting': 'playtesting', 'portability': 'portability', 'portfolio': 'portfolio',
    'post_apocalyptic': 'post', 'post_launch': 'post', 'post_mortem': 'post', 'post_mortems': 'post',
    'postmortem': 'post', 'pre_production': 'pre', 'press_kits': 'press',
    'prioritization': 'prioritization', 'problem_solving': 'problem',
    'procedural_content': 'procedural', 'procedural_generation': 'procedural',
    'production': 'production', 'production_challenges': 'production',
    'production_context': 'production', 'production_mindset': 'production',
    'production_process': 'production', 'production_realities': 'production',
    'production_setup': 'production', 'production_stories': 'production',
    'productivity': 'productivity', 'professional_development': 'professional',
    'professional_growth': 'professional', 'professionalism': 'professionalism',
    'programming': 'programming', 'programming_practices': 'programming',
    'programming_team': 'programming', 'progression_systems': 'progression',
    'project_cancellation': 'project', 'project_ideas': 'project', 'project_inception': 'project',
    'project_management': 'project', 'project_scale': 'project', 'project_scope': 'project',
    'project_selection': 'project', 'projectmanagement': 'projectmanagement', 'props': 'props',
    'prototyping': 'prototyping', 'psychology': 'psychology', 'public_relations': 'public',
    'publisher_relations': 'publisher', 'publishing': 'publishing', 'q': 'q', 'qa': 'qa',
    'qa_testing': 'qa', 'quality_assurance': 'quality', 'quest_design': 'quest',
    'random_encounters': 'random', 'randomness': 'random', 'remakes': 'remakes',
    'replayability': 'replayability', 'research': 'research', 'resilience': 'resilience',
    'respect': 'respect', 'retro_gaming': 'retro', 'retrospective': 'retrospective',
    'risk_management': 'risk', 'rng': 'rng', 'roleplaying': 'roleplaying', 'rpg_design': 'rpg',
    'rpg_development': 'rpg', 'rpg_mechanics': 'rpg', 'rpg_systems': 'rpg',
    'rules_adaptation': 'rules', 'rules_design': 'rules', 'sci_fi_games': 'sci',
    'scope_creep': 'scope', 'scope_management': 'scope', 'scoping': 'scope', 'scripting': 'scripting',
    'self_assessment': 'self', 'self_awareness': 'self', 'self_improvement': 'self',
    'self_reflection': 'self', 'sequel_design': 'sequel', 'sequel_development': 'sequel',
    'sequels': 'sequel', 'setting_design': 'setting', 'shaders': 'shaders',
    'skill_adaptation': 'skill', 'skill_development': 'skill', 'skill_evaluation': 'skill',
    'skill_systems': 'skill', 'social_commentary': 'social', 'social_dynamics': 'social',
    'soft_skills': 'soft', 'software_engineering': 'software', 'sound_design': 'sound',
    'source_control': 'source', 'spell_design': 'spell', 'startup_life': 'startup', 'stats': 'stats',
    'steam_data': 'steam', 'story_design': 'story', 'story_editing': 'story',
    'story_structure': 'story', 'storytelling': 'storytelling',
    'storytelling_inspiration': 'storytelling', 'studio_culture': 'studio',
    'studio_finance': 'studio', 'studio_life': 'studio', 'studio_management': 'studio',
    'survival_game': 'survival', 'system_design': 'system', 'systems_design': 'system',
    'tabletop_games': 'tabletop', 'tabletop_rpg': 'tabletop', 'tabletop_rpgs': 'tabletop',
    'target_audience': 'target', 'team_building': 'team', 'team_collaboration': 'team',
    'team_communication': 'team', 'team_culture': 'team', 'team_dynamics': 'team',
    'team_management': 'team', 'team_morale': 'team', 'team_structure': 'team', 'teamwork': 'teamwork',
    'technical_challenges': 'technical', 'technical_constraints': 'technical',
    'technical_design': 'technical', 'telemetry': 'telemetry', 'testing': 'testing',
    'time_management': 'time', 'tool_design': 'tool', 'tool_development': 'tool', 'tooling': 'tooling',
    'tools_development': 'tools', 'ttrpg': 'ttrpg', 'ttrpg_design': 'ttrpg', 'ui_design': 'ui',
    'ui_development': 'ui', 'ui_ux': 'ui', 'unity': 'unity', 'unity3d': 'unity',
    'unity_engine': 'unity', 'unreal_engine': 'unreal', 'user_experience': 'user',
    'user_feedback': 'user', 'user_interface': 'user', 'ux_design': 'ux',
    'version_control': 'version', 'vertical_slice': 'vertical', 'video_production': 'video',
    'virtual_reality': 'virtual', 'visual_effects': 'visual', 'visual_feedback': 'visual',
    'voice_acting': 'voice', 'work_culture': 'work', 'work_ethic': 'work',
    'work_life_balance': 'work', 'workflow': 'workflow', 'workflow_optimization': 'workflow',
    'workplace_culture': 'workplace', 'world_building': 'world', 'world_design': 'world',
    'writing': 'writing', 'xp_systems': 'xp', 'youtube': 'youtube', 'youtube_analytics': 'youtube',
    'youtube_strategy': 'youtube'
}

# Build reverse alias mapping
alias_by_canon = defaultdict(set)
for tag, canon in TAG_MAP.items():
    alias_by_canon[canon].update({tag, canon})

# Collect files per canonical tag
canon_files = defaultdict(set)
tag_re = re.compile(r"#([\w\-]+)")

for md in Path("chapters").rglob("*.md"):
    if md.name.lower() == "readme.md":
        continue
    with md.open(encoding="utf-8") as f:
        for _ in range(5):                          # only scan header area
            line = f.readline()
            if not line or not line.strip():
                break
            for raw in tag_re.findall(line):
                tag = raw.lower()
                canon = TAG_MAP.get(tag, tag)
                canon_files[canon].add(md)
                alias_by_canon[canon].add(tag)

# Write readme.md
lines = []
for canon in sorted(canon_files):
    aliases = sorted(a for a in alias_by_canon[canon] if a != canon)
    lines.append(" ".join(["#" + canon] + [f"#{a}" for a in aliases]))
    for fp in sorted(canon_files[canon], key=lambda p: p.name.lower()):
        rel = fp.as_posix()
        lines.append(f"* [{fp.name}]({rel})")
    lines.append("")

Path("readme.md").write_text("\n".join(lines), encoding="utf-8")
print("readme.md generated")
